   1              	# 1 "../common/44binit.asm"
   1              	# *******************************************************
   0              	
   0              	
   0              	
   2              	# * NAME    : 44BINIT.S									*
   3              	# * Version : 10.April.2000								*
   4              	# * Description:										*
   5              	# *	C start up codes									*
   6              	# *	Configure memory, Initialize ISR ,stacks			*
   7              	# *	Initialize C-variables								*
   8              	# *	Fill zeros into zero-initialized C-variables		*
   9              	# *******************************************************
  10              	
  11              	    .include "option.a"
  12              	    .include "memcfg.a"
  13              	
  14              	#Memory Area
  15              	#GCS6    8M 16bit(8MB) DRAM/SDRAM(0xc000000-0xc7fffff)
  16              	#APP     RAM=0xc000000~0xc7effff 
  17              	#EV_boot RAM=0xc7f0000-0xc7ff000 // if EV_boot
  18              	#STACK	 =0xc7ffa00
  19              	
  20              	#Interrupt Control
  21              	.equ 	INTPND,		0x01e00004
  22              	.equ 	INTMOD,		0x01e00008
  23              	.equ 	INTMSK,		0x01e0000c
  24              	.equ 	I_ISPR,		0x01e00020
  25              	.equ 	I_CMST,		0x01e0001c
  26              	
  27              	#Watchdog timer
  28              	.equ 	WTCON,		0x01d30000
  29              	
  30              	#Clock Controller
  31              	.equ 	PLLCON,		0x01d80000
  32              	.equ 	CLKCON,		0x01d80004
  33              	.equ 	LOCKTIME,	0x01d8000c
  34              		
  35              	#Memory Controller
  36              	.equ 	REFRESH,	0x01c80024
  37              	
  38              	#BDMA destination register
  39              	.equ 	BDIDES0,	0x1f80008
  40              	.equ 	BDIDES1,	0x1f80028
  41              	
  42              	#Pre-defined constants
  43              	.equ 	USERMODE,	0x10
  44              	.equ 	FIQMODE,	0x11
  45              	.equ 	IRQMODE,	0x12
  46              	.equ 	SVCMODE,	0x13
  47              	.equ 	ABORTMODE,	0x17
  48              	.equ 	UNDEFMODE,	0x1b
  49              	.equ 	MODEMASK,	0x1f
  50              	.equ 	NOINT,		0xc0
  51              	.equ    IRQ_MODE,	0x40       /* disable Interrupt Mode (IRQ) */
  52              	.equ    FIQ_MODE,	0x80       /* disable Fast Interrupt Mode (FIQ) */
  53              	
  54              	.macro HANDLER HandleLabel
  55              	    sub	    sp,sp,#4	    /* decrement sp(to store jump address) */							
  56              	    stmfd   sp!,{r0}	    /* PUSH the work register to stack(lr does't push because it return to ori
  57              	    ldr	    r0,=\HandleLabel/* load the address of HandleXXX to r0 */
  58              	    ldr	    r0,[r0]	    	/* load the contents(service routine start address) of HandleXXX */
  59              	    str	    r0,[sp,#4]	    /* store the contents(ISR) of HandleXXX to stack */
  60              	    ldmfd   sp!,{r0,pc}	    /* POP the work register and pc(jump to ISR) */
  61              	.endm
  62              	
  63              	    .extern       Image_RO_Limit    /* End of ROM code (=start of ROM data) */
  64              	    .extern       Image_RW_Base     /* Base of RAM to initialise */           
  65              	    .extern       Image_ZI_Base     /* Base and limit of area */              
  66              	    .extern       Image_ZI_Limit    /* to zero initialise */       
  67              	
  68              	    .extern Main			/* The main entry of mon program */
  69              	    
  70              	    .text
  71              	
  72              	    ENTRY:
  73 ???? 000000EA 	    b ResetHandler			/* for debug            */
  74 ???? 000000EA 	    b HandlerUndef      	/* handlerUndef         */
  75 ???? 000000EA 	    b HandlerSWI        	/* SWI interrupt handler*/
  76 ???? 000000EA 	    b HandlerPabort     	/* handlerPAbort        */
  77 ???? 000000EA 	    b HandlerDabort     	/* handlerDAbort        */
  78 ???? 000000EA 	    b .                 	/* handlerReserved      */
  79 ???? 000000EA 	    b HandlerIRQ
  80 ???? 000000EA 	    b HandlerFIQ
  81              		#***IMPORTANT NOTE***
  82              		#If the H/W vectored interrutp mode is enabled, The above two instructions should
  83              		#be changed like below, to work-around with H/W bug of S3C44B0X interrupt controller. 
  84              		# b HandlerIRQ  ->  subs pc,lr,#4
  85              		# b HandlerIRQ  ->  subs pc,lr,#4
  86              	
  87              	VECTOR_BRANCH:
  88 ???? 00F01FE5 	    ldr pc,=HandlerEINT0    /*mGA    H/W interrupt vector table  */
  89 ???? 00F01FE5 	    ldr pc,=HandlerEINT1    /*	                                 */	
  90 ???? 00F01FE5 	    ldr pc,=HandlerEINT2    /*                                   */  
  91 ???? 00F01FE5 	    ldr pc,=HandlerEINT3    /*                                   */  
  92 ???? 00F01FE5 	    ldr pc,=HandlerEINT4567 /*                                   */  
  93 ???? 00F01FE5 	    ldr pc,=HandlerTICK	    /*mGA                                */   
  94 ???? 000000EA 	    b .                                                          
  95 ???? 000000EA 	    b .                                                         
  96 ???? 00F01FE5 	    ldr pc,=HandlerZDMA0    /*mGB                                */  
  97 ???? 00F01FE5 	    ldr pc,=HandlerZDMA1    /*                                   */  
  98 ???? 00F01FE5 	    ldr pc,=HandlerBDMA0    /*                                   */  
  99 ???? 00F01FE5 	    ldr pc,=HandlerBDMA1    /*                                   */  
 100 ???? 00F01FE5 	    ldr pc,=HandlerWDT	    /*                                   */   
 101 ???? 00F01FE5 	    ldr pc,=HandlerUERR01   /*mGB                                */  
 102 ???? 000000EA 	    b .                                                          
 103 ???? 000000EA 	    b .                                                          
 104 ???? 00F01FE5 	    ldr pc,=HandlerTIMER0   /*mGC                                */  
 105 ???? 00F01FE5 	    ldr pc,=HandlerTIMER1   /*                                   */  
 106 ???? 00F01FE5 	    ldr pc,=HandlerTIMER2   /*                                   */  
 107 ???? 00F01FE5 	    ldr pc,=HandlerTIMER3   /*                                   */  
 108 ???? 00F01FE5 	    ldr pc,=HandlerTIMER4   /*                                   */  
 109 ???? 00F01FE5 	    ldr pc,=HandlerTIMER5   /*mGC                                */  
 110 ???? 000000EA 	    b .                                                          
 111 ???? 000000EA 	    b .                                                          
 112 ???? 00F01FE5 	    ldr pc,=HandlerURXD0    /*mGD                                */  
 113 ???? 00F01FE5 	    ldr pc,=HandlerURXD1    /*                                   */  
 114 ???? 00F01FE5 	    ldr pc,=HandlerIIC	    /*                                   */   
 115 ???? 00F01FE5 	    ldr pc,=HandlerSIO	    /*                                   */   
 116 ???? 00F01FE5 	    ldr pc,=HandlerUTXD0    /*                                   */  
 117 ???? 00F01FE5 	    ldr pc,=HandlerUTXD1    /*mGD                                */  
 118 ???? 000000EA 	    b .                                                          
 119 ???? 000000EA 	    b .                                                          
 120 ???? 00F01FE5 	    ldr pc,=HandlerRTC	    /*mGKA                               */   
 121 ???? 000000EA 	    b .					    /*                     		         */
 122 ???? 000000EA 	    b .					    /*                     		         */
 123 ???? 000000EA 	    b .					    /*                     		         */
 124 ???? 000000EA 	    b .					    /*                     		         */
 125 ???? 000000EA 	    b .					    /*mGKA                 			     */
 126 ???? 000000EA 	    b .                                                          
 127 ???? 000000EA 	    b .                                                          
 128 ???? 00F01FE5 	    ldr pc,=HandlerADC	    /*mGKB                               */  
 129 ???? 000000EA 	    b .					    /*                     		         */
 130 ???? 000000EA 	    b .					    /*                     		         */
 131 ???? 000000EA 	    b .					    /*                     		         */
 132 ???? 000000EA 	    b .					    /*                     		         */
 133 ???? 000000EA 	    b .					    /*mGKB                 		         */
 134 ???? 000000EA 	    b .                                                          
 135 ???? 000000EA 	    b .                                                          
 136              	@0xe0=EnterPWDN                                                 
 137 ???? 00F01FE5 	    ldr pc,=EnterPWDN
 138              	
 139              	@   .ltorg
 140              	          	/* the current contents of the literal pool\
 141              	               to be dumped into the current section\ 
 142              	               (which is assumed to be the .text section)\ 
 143              	               at the current location (aligned to a word boundary).*/
 144              	   .align
 145              	
 146 ???? 00D04DE2 	HandlerFIQ:		HANDLER HandleFIQ
 146      04002DE5 
 146      00001FE5 
 146      000090E5 
 146      00000DE5 
 147 ???? 00D04DE2 	HandlerIRQ:		HANDLER HandleIRQ
 147      04002DE5 
 147      00001FE5 
 147      000090E5 
 147      00000DE5 
 148 ???? 00D04DE2 	HandlerUndef:	HANDLER HandleUndef
 148      04002DE5 
 148      00001FE5 
 148      000090E5 
 148      00000DE5 
 149 ???? 00D04DE2 	HandlerSWI:		HANDLER HandleSWI
 149      04002DE5 
 149      00001FE5 
 149      000090E5 
 149      00000DE5 
 150 ???? 00D04DE2 	HandlerDabort:	HANDLER HandleDabort
 150      04002DE5 
 150      00001FE5 
 150      000090E5 
 150      00000DE5 
 151 ???? 00D04DE2 	HandlerPabort:	HANDLER HandlePabort
 151      04002DE5 
 151      00001FE5 
 151      000090E5 
 151      00000DE5 
 152 ???? 00D04DE2 	HandlerADC:		HANDLER HandleADC
 152      04002DE5 
 152      00001FE5 
 152      000090E5 
 152      00000DE5 
 153 ???? 00D04DE2 	HandlerRTC:		HANDLER HandleRTC
 153      04002DE5 
 153      00001FE5 
 153      000090E5 
 153      00000DE5 
 154 ???? 00D04DE2 	HandlerUTXD1:	HANDLER HandleUTXD1
 154      04002DE5 
 154      00001FE5 
 154      000090E5 
 154      00000DE5 
 155 ???? 00D04DE2 	HandlerUTXD0:	HANDLER HandleUTXD0
 155      04002DE5 
 155      00001FE5 
 155      000090E5 
 155      00000DE5 
 156 ???? 00D04DE2 	HandlerSIO:		HANDLER HandleSIO
 156      04002DE5 
 156      00001FE5 
 156      000090E5 
 156      00000DE5 
 157 ???? 00D04DE2 	HandlerIIC:		HANDLER HandleIIC
 157      04002DE5 
 157      00001FE5 
 157      000090E5 
 157      00000DE5 
 158 ???? 00D04DE2 	HandlerURXD1:	HANDLER HandleURXD1
 158      04002DE5 
 158      00001FE5 
 158      000090E5 
 158      00000DE5 
 159 ???? 00D04DE2 	HandlerURXD0:	HANDLER HandleURXD0
 159      04002DE5 
 159      00001FE5 
 159      000090E5 
 159      00000DE5 
 160 ???? 00D04DE2 	HandlerTIMER5:	HANDLER HandleTIMER5
 160      04002DE5 
 160      00001FE5 
 160      000090E5 
 160      00000DE5 
 161 ???? 00D04DE2 	HandlerTIMER4:	HANDLER HandleTIMER4
 161      04002DE5 
 161      00001FE5 
 161      000090E5 
 161      00000DE5 
 162 ???? 00D04DE2 	HandlerTIMER3:	HANDLER HandleTIMER3
 162      04002DE5 
 162      00001FE5 
 162      000090E5 
 162      00000DE5 
 163 ???? 00D04DE2 	HandlerTIMER2:	HANDLER HandleTIMER2
 163      04002DE5 
 163      00001FE5 
 163      000090E5 
 163      00000DE5 
 164 ???? 00D04DE2 	HandlerTIMER1:	HANDLER HandleTIMER1
 164      04002DE5 
 164      00001FE5 
 164      000090E5 
 164      00000DE5 
 165 ???? 00D04DE2 	HandlerTIMER0:	HANDLER HandleTIMER0
 165      04002DE5 
 165      00001FE5 
 165      000090E5 
 165      00000DE5 
 166 ???? 00D04DE2 	HandlerUERR01:	HANDLER HandleUERR01
 166      04002DE5 
 166      00001FE5 
 166      000090E5 
 166      00000DE5 
 167 ???? 00D04DE2 	HandlerWDT:		HANDLER HandleWDT
 167      04002DE5 
 167      00001FE5 
 167      000090E5 
 167      00000DE5 
 168 ???? 00D04DE2 	HandlerBDMA1:	HANDLER HandleBDMA1
 168      04002DE5 
 168      00001FE5 
 168      000090E5 
 168      00000DE5 
 169 ???? 00D04DE2 	HandlerBDMA0:	HANDLER HandleBDMA0
 169      04002DE5 
 169      00001FE5 
 169      000090E5 
 169      00000DE5 
 170 ???? 00D04DE2 	HandlerZDMA1:	HANDLER HandleZDMA1
 170      04002DE5 
 170      00001FE5 
 170      000090E5 
 170      00000DE5 
 171 ???? 00D04DE2 	HandlerZDMA0:	HANDLER HandleZDMA0
 171      04002DE5 
 171      00001FE5 
 171      000090E5 
 171      00000DE5 
 172 ???? 00D04DE2 	HandlerTICK:	HANDLER HandleTICK
 172      04002DE5 
 172      00001FE5 
 172      000090E5 
 172      00000DE5 
 173 ???? 00D04DE2 	HandlerEINT4567:HANDLER HandleEINT4567
 173      04002DE5 
 173      00001FE5 
 173      000090E5 
 173      00000DE5 
 174 ???? 00D04DE2 	HandlerEINT3:	HANDLER HandleEINT3
 174      04002DE5 
 174      00001FE5 
 174      000090E5 
 174      00000DE5 
 175 ???? 00D04DE2 	HandlerEINT2:	HANDLER HandleEINT2
 175      04002DE5 
 175      00001FE5 
 175      000090E5 
 175      00000DE5 
 176 ???? 00D04DE2 	HandlerEINT1:	HANDLER HandleEINT1
 176      04002DE5 
 176      00001FE5 
 176      000090E5 
 176      00000DE5 
 177 ???? 00D04DE2 	HandlerEINT0:	HANDLER HandleEINT0
 177      04002DE5 
 177      00001FE5 
 177      000090E5 
 177      00000DE5 
 178              	
 179              	#One of the following two routines can be used for non-vectored interrupt.
 180              	
 181              	IsrIRQ:						/* using I_ISPR register. */
 182 ???? 00D04DE2 	    sub	    sp,sp,#4       	/* reserved for PC	  */
 183 ???? 00032DE9 	    stmfd   sp!,{r8-r9}   
 184              	
 185              	#IMPORTANT CAUTION
 186              	# when I_ISPC isn't used properly, I_ISPR can be 0 in this routine.
 187              	
 188 ???? 00901FE5 	    ldr	    r9,=I_ISPR
 189 ???? 009099E5 	    ldr	    r9,[r9]
 190              	
 191 ???? 000059E3 		cmp		r9, #0x0		/* If the IDLE mode work-around is used, 	*/
 192              								/* r9 may be 0 sometimes.			*/
 193 ???? 0000000A 		beq		l2
 194              	
 195 ???? 0080A0E3 	    mov	    r8,#0x0
 196              	l0:
 197 ???? 2990B0E1 	    movs    r9,r9,lsr #1
 198 ???? 0000002A 	    bcs	    l1
 199 ???? 008088E2 	    add	    r8,r8,#4
 200 ???? 000000EA 	    b	    l0
 201              	
 202              	l1:
 203 ???? 00901FE5 	    ldr	    r9,=HandleADC
 204 ???? 089089E0 	    add	    r9,r9,r8
 205 ???? 009099E5 	    ldr	    r9,[r9]
 206 ???? 00900DE5 	    str	    r9,[sp,#8]
 207 ???? 0083BDE8 	    ldmfd   sp!,{r8-r9,pc}
 208              	
 209              	l2:
 210 ???? 0003BDE8 		ldmfd	sp!,{r8-r9}
 211 ???? 00D08DE2 		add		sp,sp,#4
 212 ???? 00F05EE2 		subs	pc,lr,#4
 213              	
 214              	#****************************************************
 215              	#*	START											*
 216              	#****************************************************
 217              	ResetHandler:
 218 ???? 00001FE5 	    ldr	    r0,=WTCON	    	/* watch dog disable*/
 219 ???? 0010A0E3 	    ldr	    r1,=0x0 		
 220 ???? 001080E5 	    str	    r1,[r0]
 221              	
 222 ???? 00001FE5 	    ldr	    r0,=INTMSK
 223 ???? 3E13E0E3 	    ldr	    r1,=0x07ffffff  	/* all interrupt disable */
 224 ???? 001080E5 	    str	    r1,[r0]
 225              	
 226              	    #****************************************************
 227              	    #*	Set clock control registers						*
 228              	    #****************************************************
 229 ???? 00001FE5 	    ldr		r0,=LOCKTIME
 230 ???? 00101FE5 	    ldr		r1,=0xfff
 231 ???? 001080E5 	    str		r1,[r0]
 232              	
 233              	.if PLLONSTART
 234              		ldr		r0,=PLLCON			/* temporary setting of PLL */
 235              		ldr		r1,=((M_DIV<<12)+(P_DIV<<4)+S_DIV)	/* Fin=8MHz,Fout=64MHz     */
 236              		str		r1,[r0]
 237              	.endif
 238              	
 239 ???? 00001FE5 	    ldr	    r0,=CLKCON		
 240 ???? 00101FE5 	    ldr	    r1,=0x7ff8	    	/* All unit block CLK enable */
 241 ???? 001080E5 	    str	    r1,[r0]
 242              	
 243              	    #****************************************
 244              	    #*  change BDMACON reset value for BDMA *   
 245              	    #****************************************
 246 ???? 00001FE5 	    ldr     r0,=BDIDES0      
 247 ???? 0111A0E3 	    ldr     r1,=0x40000000   	/* BDIDESn reset value should be 0x40000000 */
 248 ???? 001080E5 	    str     r1,[r0]
 249              	
 250 ???? 00001FE5 	    ldr     r0,=BDIDES1      
 251 ???? 0111A0E3 	    ldr     r1,=0x40000000   	/* BDIDESn reset value should be 0x40000000 */	 
 252 ???? 001080E5 	    str     r1,[r0]
 253              	
 254              	    #****************************************************
 255              	    #*	Set memory control registers					* 	
 256              	    #****************************************************
 257 ???? 00001FE5 	    ldr	    r0,=SMRDATA
 258 ???? FE3F90E8 	    ldmia   r0,{r1-r13}
 259 ???? 7207A0E3 	    ldr	    r0,=0x01c80000  	/* BWSCON Address */
 260 ???? FE3F80E8 	    stmia   r0,{r1-r13}
 261              	
 262              	    #;****************************************************
 263              	    #;*	Initialize stacks								* 
 264              	    #;****************************************************
 265 ???? 00D01FE5 	    ldr	    sp, =SVCStack		/* Why	*/		
 266 ???? 000000EB 	    bl	    InitStacks
 267              	
 268              	    #;****************************************************
 269              	    #;*	Setup IRQ handler								*
 270              	    #;****************************************************
 271 ???? 00001FE5 	    ldr	    r0,=HandleIRQ		/* This routine is needed */
 272 ???? 00101FE5 	    ldr	    r1,=IsrIRQ			/* if there isn't 'subs pc,lr,#4' at 0x18, 0x1c */
 273 ???? 001080E5 	    str	    r1,[r0]
 274              	
 275              	    #********************************************************
 276              	    #*	Copy and paste RW data/zero initialized data	    *
 277              	    #********************************************************
 278 ???? 00001FE5 	    LDR	    r0, =Image_RO_Limit	/* Get pointer to ROM data */
 279 ???? 00101FE5 	    LDR	    r1, =Image_RW_Base	/* and RAM copy	*/
 280 ???? 00301FE5 	    LDR	    r3, =Image_ZI_Base	
 281              		/* Zero init base => top of initialised data */
 282              				
 283 ???? 010050E1 	    CMP	    r0, r1	    		/* Check that they are different */
 284 ???? 0000000A 	    BEQ	    F1
 285              	F0:
 286 ???? 030051E1 	    CMP	    r1, r3				/* Copy init data                        */
 287 ???? 00201034 	    LDRCC   r2, [r0], #4        /* --> LDRCC r2, [r0] + ADD r0, r0, #4	 */
 288 ???? 00200134 	    STRCC   r2, [r1], #4        /* --> STRCC r2, [r1] + ADD r1, r1, #4   */ 
 289 ???? 0000003A 	    BCC	    F0
 290              	F1:
 291 ???? 00101FE5 	    LDR	    r1, =Image_ZI_Limit	/* Top of zero init segment */
 292 ???? 0020A0E3 	    MOV	    r2, #0
 293              	F2:
 294 ???? 010053E1 	    CMP	    r3, r1	    		/* Zero init */
 295 ???? 00200334 	    STRCC   r2, [r3], #4
 296 ???? 0000003A 	    BCC	    F2
 297              	
 298 ???? 00000FE1 		MRS	r0, CPSR
 299 ???? 0000C0E3 		BIC	r0, r0, #NOINT /* enable interrupt */
 300 ???? 00F02FE1 		MSR	CPSR_cxsf, r0
 301              		/* jump to main() */
 302 ???? 000000EB 	   	BL	Main
 303 ???? 000000EA 	   	B   .	    
 304              	
 305              	#;****************************************************
 306              	#;*	The function for initializing stack				*
 307              	#;****************************************************
 308              	InitStacks:
 309              		#Don't use DRAM,such as stmfd,ldmfd......
 310              		#SVCstack is initialized before
 311              		#Under toolkit ver 2.50, 'msr cpsr,r1' can be used instead of 'msr cpsr_cxsf,r1'
 312              	
 313 ???? 00000FE1 	    mrs	    r0,cpsr
 314 ???? 0000C0E3 	    bic	    r0,r0,#MODEMASK
 315 ???? 001080E3 	    orr	    r1,r0,#UNDEFMODE
 316 ???? 01F02FE1 	    msr	    cpsr_cxsf,r1		/* UndefMode */
 317 ???? 00D01FE5 	    ldr	    sp,=UndefStack
 318              		
 319 ???? 001080E3 	    orr	    r1,r0,#ABORTMODE|NOINT
 320 ???? 01F02FE1 	    msr	    cpsr_cxsf,r1 	    /* AbortMode */	
 321 ???? 00D01FE5 	    ldr	    sp,=AbortStack
 322              	
 323 ???? 001080E3 	    orr	    r1,r0,#IRQMODE|FIQ_MODE
 324 ???? 01F02FE1 	    msr	    cpsr_cxsf,r1 	    /* IRQMode */
 325 ???? 00D01FE5 	    ldr	    sp,=IRQStack
 326              		
 327 ???? 001080E3 	    orr	    r1,r0,#FIQMODE|IRQ_MODE
 328 ???? 01F02FE1 	    msr	    cpsr_cxsf,r1 	    /* FIQMode */
 329 ???? 00D01FE5 	    ldr	    sp,=FIQStack
 330              	
 331 ???? 0000C0E3 	    bic	    r0,r0,#MODEMASK
 332 ???? 001080E3 	    orr	    r1,r0,#SVCMODE
 333 ???? 01F02FE1 	    msr	    cpsr_cxsf,r1 	    /* SVCMode */
 334 ???? 00D01FE5 	    ldr	    sp,=SVCStack
 335              	
 336              		#USER mode is not initialized.
 337 ???? 0EF0A0E1 	    mov	    pc,lr 				/* The LR register may be not valid for the mode changes. */
 338              	
 339              	#****************************************************
 340              	#*	The function for entering power down mode		*
 341              	#****************************************************
 342              	#void EnterPWDN(int CLKCON);
 343              	EnterPWDN:
 344 ???? 0020A0E1 	    mov	    r2,r0               /* r0=CLKCON */
 345 ???? 00001FE5 	    ldr	    r0,=REFRESH		
 346 ???? 003090E5 	    ldr	    r3,[r0]
 347 ???? 0310A0E1 	    mov	    r1, r3
 348 ???? 001081E3 	    orr	    r1, r1, #0x400000   /* self-refresh enable */
 349 ???? 001080E5 	    str	    r1, [r0]
 350              	
 351 ???? 0000A0E1 	    nop     /* Wait until self-refresh is issued. May not be needed. */
 352 ???? 0000A0E1 	    nop     /* If the other bus master holds the bus, ... */
 353 ???? 0000A0E1 	    nop	    /* mov r0, r0 */
 354 ???? 0000A0E1 	    nop
 355 ???? 0000A0E1 	    nop
 356 ???? 0000A0E1 	    nop
 357 ???? 0000A0E1 	    nop
 358              	
 359              	#enter POWERDN mode
 360 ???? 00001FE5 	    ldr	    r0,=CLKCON
 361 ???? 002080E5 	    str	    r2,[r0]
 362              	
 363              	#wait until enter SL_IDLE,STOP mode and until wake-up
 364 ???? 1000A0E3 	    ldr	    r0,=0x10
 365 ???? 000050E2 	U0: subs    r0,r0,#1
 366 ???? 0000001A 	    bne	    U0
 367              	
 368              	#exit from DRAM/SDRAM self refresh mode.
 369 ???? 00001FE5 	    ldr	    r0,=REFRESH
 370 ???? 003080E5 	    str	    r3,[r0]
 371 ???? 0EF0A0E1 	    mov	    pc,lr
 372              	    
 373 ???? 00000000 	    .ltorg
 373      00000000 
 373      00000000 
 373      00000000 
 373      00000000 
 374              	
 375              	SMRDATA:
 376              	#*****************************************************************
 377              	#* Memory configuration has to be optimized for best performance *
 378              	#* The following parameter is not optimized.                     *
 379              	#*****************************************************************
 380              	
 381              	#*** memory access cycle parameter strategy ***
 382              	# 1) Even FP-DRAM, EDO setting has more late fetch point by half-clock
 383              	# 2) The memory settings,here, are made the safe parameters even at 66Mhz.
 384              	# 3) FP-DRAM Parameters:tRCD=3 for tRAC, tcas=2 for pad delay, tcp=2 for bus load.
 385              	# 4) DRAM refresh rate is for 40Mhz. 
 386              	
 387              	#bank0	16bit BOOT ROM
 388              	#bank1	NandFlash(8bit)/IDE/USB/rtl8019as/LCD
 389              	#bank2	No use 
 390              	#bank3	Keyboard 
 391              	#bank4	No use
 392              	#bank5	No use
 393              	#bank6	16bit SDRAM
 394              	#bank7	No use
 395              	
 396              	.ifeq BUSWIDTH-16
 397              		.long 0x11110102		/* Bank0=16bit BootRom(AT29C010A*2) :0x0 */
 398              	.else
 399 ???? 20222222 	   	.long 0x22222220		/* Bank0=OM[1:0], Bank1~Bank7=32bit 	 */
 400              	.endif
 401 ???? 00000000 		.long ((B0_Tacs<<13)+(B0_Tcos<<11)+(B0_Tacc<<8)+(B0_Tcoh<<6)+(B0_Tah<<4)+(B0_Tacp<<2)+(B0_PMC))	/*
 402 ???? 00000000 		.long ((B1_Tacs<<13)+(B1_Tcos<<11)+(B1_Tacc<<8)+(B1_Tcoh<<6)+(B1_Tah<<4)+(B1_Tacp<<2)+(B1_PMC))	/*
 403 ???? 00000000 		.long ((B2_Tacs<<13)+(B2_Tcos<<11)+(B2_Tacc<<8)+(B2_Tcoh<<6)+(B2_Tah<<4)+(B2_Tacp<<2)+(B2_PMC))	/*
 404 ???? 00000000 		.long ((B3_Tacs<<13)+(B3_Tcos<<11)+(B3_Tacc<<8)+(B3_Tcoh<<6)+(B3_Tah<<4)+(B3_Tacp<<2)+(B3_PMC))	/*
 405 ???? 00000000 		.long ((B4_Tacs<<13)+(B4_Tcos<<11)+(B4_Tacc<<8)+(B4_Tcoh<<6)+(B4_Tah<<4)+(B4_Tacp<<2)+(B4_PMC))	/*
 406 ???? 00000000 		.long ((B5_Tacs<<13)+(B5_Tcos<<11)+(B5_Tacc<<8)+(B5_Tcoh<<6)+(B5_Tah<<4)+(B5_Tacp<<2)+(B5_PMC))	/*
 407              		.ifc "DRAM",BDRAMTYPE
 408              		    .long ((B6_MT<<15)+(B6_Trcd<<4)+(B6_Tcas<<3)+(B6_Tcp<<2)+(B6_CAN))	/* GCS6 check the MT value 
 409              		    .long ((B7_MT<<15)+(B7_Trcd<<4)+(B7_Tcas<<3)+(B7_Tcp<<2)+(B7_CAN))	/* GCS7                    
 410              		.else
 411 ???? 00000000 			.long ((B6_MT<<15)+(B6_Trcd<<2)+(B6_SCAN))	/* GCS6 */
 412 ???? 00000000 			.long ((B7_MT<<15)+(B7_Trcd<<2)+(B7_SCAN))	/* GCS7 */
 413              		.endif
 414 ???? 00000000 		.long ((REFEN<<23)+(TREFMD<<22)+(Trp<<20)+(Trc<<18)+(Tchr<<16)+REFCNT)	/* REFRESH RFEN=1, TREFMD=0
 415 ???? 10000000 		.long 0x10				/* SCLK power down mode, BANKSIZE 32M/32M */
 416 ???? 20000000 		.long 0x20				/* MRSR6 CL=2clk                          */
 417 ???? 20000000 		.long 0x20				/* MRSR7                                  */
 418              	
 419              	
 420              	.equ 	UserStack,	_ISR_STARTADDRESS-0xf00    		/* c7ff000 */   	
 421              	.equ	SVCStack,	_ISR_STARTADDRESS-0xf00+256    	/* c7ff100 */
 422              	.equ	UndefStack,	_ISR_STARTADDRESS-0xf00+256*2   /* c7ff200 */
 423              	.equ	AbortStack,	_ISR_STARTADDRESS-0xf00+256*3   /* c7ff300 */
 424              	.equ	IRQStack,	_ISR_STARTADDRESS-0xf00+256*4   /* c7ff400 */
 425              	.equ	FIQStack,	_ISR_STARTADDRESS-0xf00+256*5   /* c7ff500 */
 426              	
 427              	.equ	HandleReset,	_ISR_STARTADDRESS
 428              	.equ	HandleUndef,	_ISR_STARTADDRESS+4
 429              	.equ	HandleSWI,		_ISR_STARTADDRESS+4*2
 430              	.equ	HandlePabort,	_ISR_STARTADDRESS+4*3
 431              	.equ	HandleDabort,	_ISR_STARTADDRESS+4*4
 432              	.equ	HandleReserved,	_ISR_STARTADDRESS+4*5
 433              	.equ	HandleIRQ,		_ISR_STARTADDRESS+4*6
 434              	.equ	HandleFIQ,		_ISR_STARTADDRESS+4*7
 435              	
 436              	#Don't use the label 'IntVectorTable',
 437              	#because armasm.exe cann't recognize this label correctly.
 438              	#the value is different with an address you think it may be.
 439              	#IntVectorTable
 440              	.equ	HandleADC,    	_ISR_STARTADDRESS+4*8
 441              	.equ	HandleRTC,		_ISR_STARTADDRESS+4*9
 442              	.equ	HandleUTXD1, 	_ISR_STARTADDRESS+4*10
 443              	.equ	HandleUTXD0,	_ISR_STARTADDRESS+4*11
 444              	.equ	HandleSIO,		_ISR_STARTADDRESS+4*12
 445              	.equ	HandleIIC,		_ISR_STARTADDRESS+4*13
 446              	.equ	HandleURXD1,	_ISR_STARTADDRESS+4*14
 447              	.equ	HandleURXD0,	_ISR_STARTADDRESS+4*15
 448              	.equ	HandleTIMER5,	_ISR_STARTADDRESS+4*16
 449              	.equ	HandleTIMER4,	_ISR_STARTADDRESS+4*17
 450              	.equ	HandleTIMER3,	_ISR_STARTADDRESS+4*18
 451              	.equ	HandleTIMER2,	_ISR_STARTADDRESS+4*19
 452              	.equ	HandleTIMER1,	_ISR_STARTADDRESS+4*20
 453              	.equ	HandleTIMER0,	_ISR_STARTADDRESS+4*21
 454              	.equ	HandleUERR01,	_ISR_STARTADDRESS+4*22
 455              	.equ	HandleWDT,		_ISR_STARTADDRESS+4*23
 456              	.equ	HandleBDMA1, 	_ISR_STARTADDRESS+4*24
 457              	.equ	HandleBDMA0,	_ISR_STARTADDRESS+4*25
 458              	.equ	HandleZDMA1, 	_ISR_STARTADDRESS+4*26
 459              	.equ	HandleZDMA0,	_ISR_STARTADDRESS+4*27
 460              	.equ	HandleTICK,		_ISR_STARTADDRESS+4*28
 461              	.equ	HandleEINT4567,	_ISR_STARTADDRESS+4*29
 462              	.equ	HandleEINT3,	_ISR_STARTADDRESS+4*30
 463              	.equ	HandleEINT2,	_ISR_STARTADDRESS+4*31
 464              	.equ	HandleEINT1,	_ISR_STARTADDRESS+4*32
 465              	.equ	HandleEINT0,	_ISR_STARTADDRESS+4*33		/* 0xc1(c7)fff84 */
 466              	
 467              			.end
DEFINED SYMBOLS
../common/44binit.asm:21     *ABS*:01e00004 INTPND
../common/44binit.asm:22     *ABS*:01e00008 INTMOD
../common/44binit.asm:23     *ABS*:01e0000c INTMSK
../common/44binit.asm:24     *ABS*:01e00020 I_ISPR
../common/44binit.asm:25     *ABS*:01e0001c I_CMST
../common/44binit.asm:28     *ABS*:01d30000 WTCON
../common/44binit.asm:31     *ABS*:01d80000 PLLCON
../common/44binit.asm:32     *ABS*:01d80004 CLKCON
../common/44binit.asm:33     *ABS*:01d8000c LOCKTIME
../common/44binit.asm:36     *ABS*:01c80024 REFRESH
../common/44binit.asm:39     *ABS*:01f80008 BDIDES0
../common/44binit.asm:40     *ABS*:01f80028 BDIDES1
../common/44binit.asm:43     *ABS*:00000010 USERMODE
../common/44binit.asm:44     *ABS*:00000011 FIQMODE
../common/44binit.asm:45     *ABS*:00000012 IRQMODE
../common/44binit.asm:46     *ABS*:00000013 SVCMODE
../common/44binit.asm:47     *ABS*:00000017 ABORTMODE
../common/44binit.asm:48     *ABS*:0000001b UNDEFMODE
../common/44binit.asm:49     *ABS*:0000001f MODEMASK
../common/44binit.asm:50     *ABS*:000000c0 NOINT
../common/44binit.asm:51     *ABS*:00000040 IRQ_MODE
../common/44binit.asm:52     *ABS*:00000080 FIQ_MODE
../common/44binit.asm:72     .text:00000000 ENTRY
../common/44binit.asm:217    .text:00000000 ResetHandler
                            .text:00000000 $d
../common/44binit.asm:73     .text:00000000 $a
../common/44binit.asm:73     .text:00000000 L0
../common/44binit.asm:148    .text:00000000 HandlerUndef
../common/44binit.asm:74     .text:00000000 L0
../common/44binit.asm:149    .text:00000000 HandlerSWI
../common/44binit.asm:75     .text:00000000 L0
../common/44binit.asm:151    .text:00000000 HandlerPabort
../common/44binit.asm:76     .text:00000000 L0
../common/44binit.asm:150    .text:00000000 HandlerDabort
../common/44binit.asm:77     .text:00000000 L0
../common/44binit.asm:78     .text:00000000 L0
../common/44binit.asm:78     .text:00000000 L0
../common/44binit.asm:147    .text:00000000 HandlerIRQ
../common/44binit.asm:79     .text:00000000 L0
../common/44binit.asm:146    .text:00000000 HandlerFIQ
../common/44binit.asm:80     .text:00000000 L0
../common/44binit.asm:87     .text:00000000 VECTOR_BRANCH
../common/44binit.asm:177    .text:00000000 HandlerEINT0
../common/44binit.asm:88     .text:00000000 L0
../common/44binit.asm:176    .text:00000000 HandlerEINT1
../common/44binit.asm:89     .text:00000000 L0
../common/44binit.asm:175    .text:00000000 HandlerEINT2
../common/44binit.asm:90     .text:00000000 L0
../common/44binit.asm:174    .text:00000000 HandlerEINT3
../common/44binit.asm:91     .text:00000000 L0
../common/44binit.asm:173    .text:00000000 HandlerEINT4567
../common/44binit.asm:92     .text:00000000 L0
../common/44binit.asm:172    .text:00000000 HandlerTICK
../common/44binit.asm:93     .text:00000000 L0
../common/44binit.asm:94     .text:00000000 L0
../common/44binit.asm:94     .text:00000000 L0
../common/44binit.asm:95     .text:00000000 L0
../common/44binit.asm:95     .text:00000000 L0
../common/44binit.asm:171    .text:00000000 HandlerZDMA0
../common/44binit.asm:96     .text:00000000 L0
../common/44binit.asm:170    .text:00000000 HandlerZDMA1
../common/44binit.asm:97     .text:00000000 L0
../common/44binit.asm:169    .text:00000000 HandlerBDMA0
../common/44binit.asm:98     .text:00000000 L0
../common/44binit.asm:168    .text:00000000 HandlerBDMA1
../common/44binit.asm:99     .text:00000000 L0
../common/44binit.asm:167    .text:00000000 HandlerWDT
../common/44binit.asm:100    .text:00000000 L0
../common/44binit.asm:166    .text:00000000 HandlerUERR01
../common/44binit.asm:101    .text:00000000 L0
../common/44binit.asm:102    .text:00000000 L0
../common/44binit.asm:102    .text:00000000 L0
../common/44binit.asm:103    .text:00000000 L0
../common/44binit.asm:103    .text:00000000 L0
../common/44binit.asm:165    .text:00000000 HandlerTIMER0
../common/44binit.asm:104    .text:00000000 L0
../common/44binit.asm:164    .text:00000000 HandlerTIMER1
../common/44binit.asm:105    .text:00000000 L0
../common/44binit.asm:163    .text:00000000 HandlerTIMER2
../common/44binit.asm:106    .text:00000000 L0
../common/44binit.asm:162    .text:00000000 HandlerTIMER3
../common/44binit.asm:107    .text:00000000 L0
../common/44binit.asm:161    .text:00000000 HandlerTIMER4
../common/44binit.asm:108    .text:00000000 L0
../common/44binit.asm:160    .text:00000000 HandlerTIMER5
../common/44binit.asm:109    .text:00000000 L0
../common/44binit.asm:110    .text:00000000 L0
../common/44binit.asm:110    .text:00000000 L0
../common/44binit.asm:111    .text:00000000 L0
../common/44binit.asm:111    .text:00000000 L0
../common/44binit.asm:159    .text:00000000 HandlerURXD0
../common/44binit.asm:112    .text:00000000 L0
../common/44binit.asm:158    .text:00000000 HandlerURXD1
../common/44binit.asm:113    .text:00000000 L0
../common/44binit.asm:157    .text:00000000 HandlerIIC
../common/44binit.asm:114    .text:00000000 L0
../common/44binit.asm:156    .text:00000000 HandlerSIO
../common/44binit.asm:115    .text:00000000 L0
../common/44binit.asm:155    .text:00000000 HandlerUTXD0
../common/44binit.asm:116    .text:00000000 L0
../common/44binit.asm:154    .text:00000000 HandlerUTXD1
../common/44binit.asm:117    .text:00000000 L0
../common/44binit.asm:118    .text:00000000 L0
../common/44binit.asm:118    .text:00000000 L0
../common/44binit.asm:119    .text:00000000 L0
../common/44binit.asm:119    .text:00000000 L0
../common/44binit.asm:153    .text:00000000 HandlerRTC
../common/44binit.asm:120    .text:00000000 L0
../common/44binit.asm:121    .text:00000000 L0
../common/44binit.asm:121    .text:00000000 L0
../common/44binit.asm:122    .text:00000000 L0
../common/44binit.asm:122    .text:00000000 L0
../common/44binit.asm:123    .text:00000000 L0
../common/44binit.asm:123    .text:00000000 L0
../common/44binit.asm:124    .text:00000000 L0
../common/44binit.asm:124    .text:00000000 L0
../common/44binit.asm:125    .text:00000000 L0
../common/44binit.asm:125    .text:00000000 L0
../common/44binit.asm:126    .text:00000000 L0
../common/44binit.asm:126    .text:00000000 L0
../common/44binit.asm:127    .text:00000000 L0
../common/44binit.asm:127    .text:00000000 L0
../common/44binit.asm:152    .text:00000000 HandlerADC
../common/44binit.asm:128    .text:00000000 L0
../common/44binit.asm:129    .text:00000000 L0
../common/44binit.asm:129    .text:00000000 L0
../common/44binit.asm:130    .text:00000000 L0
../common/44binit.asm:130    .text:00000000 L0
../common/44binit.asm:131    .text:00000000 L0
../common/44binit.asm:131    .text:00000000 L0
../common/44binit.asm:132    .text:00000000 L0
../common/44binit.asm:132    .text:00000000 L0
../common/44binit.asm:133    .text:00000000 L0
../common/44binit.asm:133    .text:00000000 L0
../common/44binit.asm:134    .text:00000000 L0
../common/44binit.asm:134    .text:00000000 L0
../common/44binit.asm:135    .text:00000000 L0
../common/44binit.asm:135    .text:00000000 L0
../common/44binit.asm:343    .text:00000000 EnterPWDN
../common/44binit.asm:137    .text:00000000 L0
../common/44binit.asm:146    .text:00000000 L0
../common/44binit.asm:147    .text:00000000 L0
../common/44binit.asm:148    .text:00000000 L0
../common/44binit.asm:149    .text:00000000 L0
../common/44binit.asm:150    .text:00000000 L0
../common/44binit.asm:151    .text:00000000 L0
../common/44binit.asm:152    .text:00000000 L0
../common/44binit.asm:153    .text:00000000 L0
../common/44binit.asm:154    .text:00000000 L0
../common/44binit.asm:155    .text:00000000 L0
../common/44binit.asm:156    .text:00000000 L0
../common/44binit.asm:157    .text:00000000 L0
../common/44binit.asm:158    .text:00000000 L0
../common/44binit.asm:159    .text:00000000 L0
../common/44binit.asm:160    .text:00000000 L0
../common/44binit.asm:161    .text:00000000 L0
../common/44binit.asm:162    .text:00000000 L0
../common/44binit.asm:163    .text:00000000 L0
../common/44binit.asm:164    .text:00000000 L0
../common/44binit.asm:165    .text:00000000 L0
../common/44binit.asm:166    .text:00000000 L0
../common/44binit.asm:167    .text:00000000 L0
../common/44binit.asm:168    .text:00000000 L0
../common/44binit.asm:169    .text:00000000 L0
../common/44binit.asm:170    .text:00000000 L0
../common/44binit.asm:171    .text:00000000 L0
../common/44binit.asm:172    .text:00000000 L0
../common/44binit.asm:173    .text:00000000 L0
../common/44binit.asm:174    .text:00000000 L0
../common/44binit.asm:175    .text:00000000 L0
../common/44binit.asm:176    .text:00000000 L0
../common/44binit.asm:177    .text:00000000 L0
../common/44binit.asm:181    .text:00000000 IsrIRQ
../common/44binit.asm:182    .text:00000000 L0
../common/44binit.asm:183    .text:00000000 L0
../common/44binit.asm:188    .text:00000000 L0
../common/44binit.asm:189    .text:00000000 L0
../common/44binit.asm:191    .text:00000000 L0
../common/44binit.asm:209    .text:00000000 l2
../common/44binit.asm:193    .text:00000000 L0
../common/44binit.asm:195    .text:00000000 L0
../common/44binit.asm:196    .text:00000000 l0
../common/44binit.asm:197    .text:00000000 L0
../common/44binit.asm:202    .text:00000000 l1
../common/44binit.asm:198    .text:00000000 L0
../common/44binit.asm:199    .text:00000000 L0
../common/44binit.asm:200    .text:00000000 L0
../common/44binit.asm:203    .text:00000000 L0
../common/44binit.asm:204    .text:00000000 L0
../common/44binit.asm:205    .text:00000000 L0
../common/44binit.asm:206    .text:00000000 L0
../common/44binit.asm:207    .text:00000000 L0
../common/44binit.asm:210    .text:00000000 L0
../common/44binit.asm:211    .text:00000000 L0
../common/44binit.asm:212    .text:00000000 L0
../common/44binit.asm:218    .text:00000000 L0
../common/44binit.asm:219    .text:00000000 L0
../common/44binit.asm:220    .text:00000000 L0
../common/44binit.asm:222    .text:00000000 L0
../common/44binit.asm:223    .text:00000000 L0
../common/44binit.asm:224    .text:00000000 L0
../common/44binit.asm:229    .text:00000000 L0
../common/44binit.asm:230    .text:00000000 L0
../common/44binit.asm:231    .text:00000000 L0
../common/44binit.asm:239    .text:00000000 L0
../common/44binit.asm:240    .text:00000000 L0
../common/44binit.asm:241    .text:00000000 L0
../common/44binit.asm:246    .text:00000000 L0
../common/44binit.asm:247    .text:00000000 L0
../common/44binit.asm:248    .text:00000000 L0
../common/44binit.asm:250    .text:00000000 L0
../common/44binit.asm:251    .text:00000000 L0
../common/44binit.asm:252    .text:00000000 L0
../common/44binit.asm:375    .text:00000000 SMRDATA
../common/44binit.asm:257    .text:00000000 L0
../common/44binit.asm:258    .text:00000000 L0
../common/44binit.asm:259    .text:00000000 L0
../common/44binit.asm:260    .text:00000000 L0
../common/44binit.asm:265    .text:00000000 L0
../common/44binit.asm:308    .text:00000000 InitStacks
../common/44binit.asm:266    .text:00000000 L0
../common/44binit.asm:271    .text:00000000 L0
../common/44binit.asm:272    .text:00000000 L0
../common/44binit.asm:273    .text:00000000 L0
../common/44binit.asm:278    .text:00000000 L0
../common/44binit.asm:279    .text:00000000 L0
../common/44binit.asm:280    .text:00000000 L0
../common/44binit.asm:283    .text:00000000 L0
../common/44binit.asm:290    .text:00000000 F1
../common/44binit.asm:284    .text:00000000 L0
../common/44binit.asm:285    .text:00000000 F0
../common/44binit.asm:286    .text:00000000 L0
../common/44binit.asm:287    .text:00000000 L0
../common/44binit.asm:288    .text:00000000 L0
../common/44binit.asm:289    .text:00000000 L0
../common/44binit.asm:291    .text:00000000 L0
../common/44binit.asm:292    .text:00000000 L0
../common/44binit.asm:293    .text:00000000 F2
../common/44binit.asm:294    .text:00000000 L0
../common/44binit.asm:295    .text:00000000 L0
../common/44binit.asm:296    .text:00000000 L0
../common/44binit.asm:298    .text:00000000 L0
../common/44binit.asm:299    .text:00000000 L0
../common/44binit.asm:300    .text:00000000 L0
../common/44binit.asm:302    .text:00000000 L0
../common/44binit.asm:303    .text:00000000 L0
../common/44binit.asm:303    .text:00000000 L0
../common/44binit.asm:313    .text:00000000 L0
../common/44binit.asm:314    .text:00000000 L0
../common/44binit.asm:315    .text:00000000 L0
../common/44binit.asm:316    .text:00000000 L0
../common/44binit.asm:317    .text:00000000 L0
../common/44binit.asm:319    .text:00000000 L0
../common/44binit.asm:320    .text:00000000 L0
../common/44binit.asm:321    .text:00000000 L0
../common/44binit.asm:323    .text:00000000 L0
../common/44binit.asm:324    .text:00000000 L0
../common/44binit.asm:325    .text:00000000 L0
../common/44binit.asm:327    .text:00000000 L0
../common/44binit.asm:328    .text:00000000 L0
../common/44binit.asm:329    .text:00000000 L0
../common/44binit.asm:331    .text:00000000 L0
../common/44binit.asm:332    .text:00000000 L0
../common/44binit.asm:333    .text:00000000 L0
../common/44binit.asm:334    .text:00000000 L0
../common/44binit.asm:337    .text:00000000 L0
../common/44binit.asm:344    .text:00000000 L0
../common/44binit.asm:345    .text:00000000 L0
../common/44binit.asm:346    .text:00000000 L0
../common/44binit.asm:347    .text:00000000 L0
../common/44binit.asm:348    .text:00000000 L0
../common/44binit.asm:349    .text:00000000 L0
../common/44binit.asm:351    .text:00000000 L0
../common/44binit.asm:352    .text:00000000 L0
../common/44binit.asm:353    .text:00000000 L0
../common/44binit.asm:354    .text:00000000 L0
../common/44binit.asm:355    .text:00000000 L0
../common/44binit.asm:356    .text:00000000 L0
../common/44binit.asm:357    .text:00000000 L0
../common/44binit.asm:360    .text:00000000 L0
../common/44binit.asm:361    .text:00000000 L0
../common/44binit.asm:364    .text:00000000 L0
../common/44binit.asm:365    .text:00000000 U0
../common/44binit.asm:365    .text:00000000 L0
../common/44binit.asm:366    .text:00000000 L0
../common/44binit.asm:369    .text:00000000 L0
../common/44binit.asm:370    .text:00000000 L0
../common/44binit.asm:371    .text:00000000 L0
../common/44binit.asm:373    .text:00000000 $d
../common/44binit.asm:373    .text:00000000 $$lit_1
                      .debug_line:00000000 L0
../common/44binit.asm:467    .debug_line:00000000 L0
                      .debug_line:00000036 L0
../common/44binit.asm:467    .text:00000000 L0
                   .debug_aranges:00000000 L0
../common/44binit.asm:467    .debug_aranges:00000010 L0
                   .debug_aranges:0000000c $d
                            .text:00000000 L0
../common/44binit.asm:467    .text:00000000 L0
                      .debug_info:00000000 L0
                      .debug_info:00000051 L0
../common/44binit.asm:467    .text:00000000 $a
                            .data:00000000 $d
                             .bss:00000000 $d
                  .ARM.attributes:00000022 $d
../common/44binit.asm:467    .debug_line:00000000 $d
                      .debug_info:00000051 $d
                    .debug_abbrev:00000014 $d

UNDEFINED SYMBOLS
HandleFIQ
HandleIRQ
HandleUndef
HandleSWI
HandleDabort
HandlePabort
HandleADC
HandleRTC
HandleUTXD1
HandleUTXD0
HandleSIO
HandleIIC
HandleURXD1
HandleURXD0
HandleTIMER5
HandleTIMER4
HandleTIMER3
HandleTIMER2
HandleTIMER1
HandleTIMER0
HandleUERR01
HandleWDT
HandleBDMA1
HandleBDMA0
HandleZDMA1
HandleZDMA0
HandleTICK
HandleEINT4567
HandleEINT3
HandleEINT2
HandleEINT1
HandleEINT0
PLLONSTART
SVCStack
Image_RO_Limit
Image_RW_Base
Image_ZI_Base
Image_ZI_Limit
Main
UndefStack
AbortStack
IRQStack
FIQStack
BUSWIDTH
B0_Tacs
B0_Tcos
B0_Tacc
B0_Tcoh
B0_Tah
B0_Tacp
B0_PMC
B1_Tacs
B1_Tcos
B1_Tacc
B1_Tcoh
B1_Tah
B1_Tacp
B1_PMC
B2_Tacs
B2_Tcos
B2_Tacc
B2_Tcoh
B2_Tah
B2_Tacp
B2_PMC
B3_Tacs
B3_Tcos
B3_Tacc
B3_Tcoh
B3_Tah
B3_Tacp
B3_PMC
B4_Tacs
B4_Tcos
B4_Tacc
B4_Tcoh
B4_Tah
B4_Tacp
B4_PMC
B5_Tacs
B5_Tcos
B5_Tacc
B5_Tcoh
B5_Tah
B5_Tacp
B5_PMC
B6_MT
B6_Trcd
B6_SCAN
B7_MT
B7_Trcd
B7_SCAN
REFEN
TREFMD
Trp
Trc
Tchr
REFCNT
UserStack
_ISR_STARTADDRESS
HandleReset
HandleReserved
